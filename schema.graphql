"An address for emailing with"
scalar Email

"escaped, HTML-renderable content"
scalar HTML

"An ISO8601 DateTime"
scalar Timestamp

"a Universal Resource Locator"
scalar URL

"a pagination-spec compatible PageInfo"
type PageInfo {
    startCursor: ID
    endCursor: ID
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

"a pagination-spec compatible Edge interface"
interface Edge {
    cursor: ID!
}

"a pagination-spec compatible Connection interface"
interface Connection {
    totalCount: Int!
    pageInfo: PageInfo!
}

# === generic inputs
input NumFilter {
    gt: Int
    lt: Int
}

input StringFilter {
    present: Boolean
    matches: String
    caseMatches: String
}

# === domain objects & related

type User {
    id: ID!
    reputation: Int!
    created: Timestamp!
    displayName: String!
    lastAccessed: Timestamp!
    location: String
    aboutMe: HTML
    views: Int!
    upVotes: Int!
    downVotes: Int!
    profileImageUrl: URL
    websiteUrl: URL
}

type UserEdge implements Edge {
    cursor: ID!
    node: User!
}

type UserConnection implements Connection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [UserEdge!]!
}

input UserFilter {
    reputation: NumFilter
    displayName: StringFilter
    websiteUrl: StringFilter
}

type Query {
    userById(id: ID!): User
    userSearch(
        first: Int
        after: ID
        last: Int
        before: ID
        filter: UserFilter
    ): UserConnection!
}
